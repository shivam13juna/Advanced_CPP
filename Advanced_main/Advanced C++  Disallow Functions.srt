1
00:00:05,279 --> 00:00:10,510
hello everyone last<font color="#E5E5E5"> time we've talked</font>

2
00:00:08,200 --> 00:00:13,000
about<font color="#E5E5E5"> the four functions that</font><font color="#CCCCCC"> compiler</font>

3
00:00:10,510 --> 00:00:15,849
automatically generates for us if we

4
00:00:13,000 --> 00:00:18,480
don't<font color="#CCCCCC"> create them ourselves the copy</font>

5
00:00:15,849 --> 00:00:22,110
constructor copy<font color="#E5E5E5"> assignment operator</font>

6
00:00:18,480 --> 00:00:26,200
destructor and the default constructor

7
00:00:22,110 --> 00:00:28,238
<font color="#CCCCCC">that is nice it can save</font><font color="#E5E5E5"> us some effort</font>

8
00:00:26,200 --> 00:00:31,238
and<font color="#E5E5E5"> time to create them</font>

9
00:00:28,239 --> 00:00:35,020
however the compiler generator functions

10
00:00:31,239 --> 00:00:39,010
are not always<font color="#E5E5E5"> useful</font><font color="#CCCCCC"> and sometimes they</font>

11
00:00:35,020 --> 00:00:41,650
are<font color="#E5E5E5"> even</font><font color="#CCCCCC"> dangerous to use for</font><font color="#E5E5E5"> example we</font>

12
00:00:39,010 --> 00:00:44,949
have<font color="#CCCCCC"> a class</font><font color="#E5E5E5"> open file which represents</font>

13
00:00:41,650 --> 00:00:46,480
a file being opened and since the

14
00:00:44,950 --> 00:00:49,090
compiler will automatically generate

15
00:00:46,480 --> 00:00:54,190
<font color="#CCCCCC">generator</font><font color="#E5E5E5"> the default constructor for us</font>

16
00:00:49,090 --> 00:00:56,739
<font color="#CCCCCC">I can do Open File F</font><font color="#E5E5E5"> and this will call</font>

17
00:00:54,190 --> 00:01:00,550
the compiler generator default function

18
00:00:56,739 --> 00:01:01,809
let's run it<font color="#E5E5E5"> it can run successfully</font>

19
00:01:00,550 --> 00:01:05,048
from<font color="#CCCCCC"> begin</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> end</font>

20
00:01:01,810 --> 00:01:07,810
<font color="#E5E5E5">although it does nothing and in this</font>

21
00:01:05,049 --> 00:01:11,440
case the compiler generated default

22
00:01:07,810 --> 00:01:14,050
constructor is useless to us because<font color="#E5E5E5"> in</font>

23
00:01:11,440 --> 00:01:18,190
order<font color="#CCCCCC"> to open a file</font><font color="#E5E5E5"> we at least need a</font>

24
00:01:14,050 --> 00:01:20,979
<font color="#E5E5E5">file name say I</font><font color="#CCCCCC"> don't want my client to</font>

25
00:01:18,190 --> 00:01:25,179
<font color="#E5E5E5">use my open file this way and I want to</font>

26
00:01:20,979 --> 00:01:27,539
disallow that<font color="#E5E5E5"> how can</font><font color="#CCCCCC"> I do</font><font color="#E5E5E5"> it for</font>

27
00:01:25,180 --> 00:01:33,640
default constructor it is<font color="#E5E5E5"> actually easy</font>

28
00:01:27,540 --> 00:01:37,119
as long as<font color="#CCCCCC"> I define a constructor that</font>

29
00:01:33,640 --> 00:01:38,950
takes any parameters then the compiler

30
00:01:37,119 --> 00:01:41,650
<font color="#E5E5E5">will not generate the default</font>

31
00:01:38,950 --> 00:01:44,200
<font color="#E5E5E5">constructor for me</font>

32
00:01:41,650 --> 00:01:46,960
so here<font color="#E5E5E5"> I create another</font><font color="#CCCCCC"> constructor</font>

33
00:01:44,200 --> 00:01:49,720
that takes a<font color="#E5E5E5"> string of file name and</font>

34
00:01:46,960 --> 00:01:54,850
then it prints some message and let's

35
00:01:49,720 --> 00:01:58,120
run it as<font color="#E5E5E5"> you see the compile failed</font>

36
00:01:54,850 --> 00:02:00,940
<font color="#E5E5E5">that is because no match function for</font>

37
00:01:58,120 --> 00:02:03,010
<font color="#CCCCCC">code to the default constructor so the</font>

38
00:02:00,940 --> 00:02:04,230
difficulty for<font color="#E5E5E5"> constructor is not there</font>

39
00:02:03,010 --> 00:02:07,390
anymore

40
00:02:04,230 --> 00:02:09,789
now in order<font color="#E5E5E5"> to create</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> open file</font><font color="#CCCCCC"> I</font>

41
00:02:07,390 --> 00:02:15,520
<font color="#E5E5E5">need to provide a parameter</font>

42
00:02:09,789 --> 00:02:18,670
let's call<font color="#E5E5E5"> screening</font><font color="#CCCCCC"> Oh file and then</font>

43
00:02:15,520 --> 00:02:21,610
<font color="#CCCCCC">run it now</font>

44
00:02:18,670 --> 00:02:26,769
it<font color="#CCCCCC"> compiles</font><font color="#E5E5E5"> and it runs</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> it opens a</font>

45
00:02:21,610 --> 00:02:29,430
file<font color="#CCCCCC"> file now in this case the compiler</font>

46
00:02:26,770 --> 00:02:32,470
generated function is just useless

47
00:02:29,430 --> 00:02:34,690
but it doesn't harm us in any way<font color="#E5E5E5"> but</font>

48
00:02:32,470 --> 00:02:38,410
<font color="#CCCCCC">sometime the compiler generated function</font>

49
00:02:34,690 --> 00:02:41,200
could<font color="#E5E5E5"> be</font><font color="#CCCCCC"> dangerous to use for example</font>

50
00:02:38,410 --> 00:02:45,310
<font color="#CCCCCC">saying now I have opened both file for</font>

51
00:02:41,200 --> 00:02:50,829
writing<font color="#E5E5E5"> with F and then I create another</font>

52
00:02:45,310 --> 00:02:54,190
<font color="#E5E5E5">open file F 2 which is copy construct</font>

53
00:02:50,830 --> 00:02:58,810
from F this will<font color="#E5E5E5"> call the compiler</font>

54
00:02:54,190 --> 00:03:03,459
generated copy constructor for F 2<font color="#CCCCCC"> and F</font>

55
00:02:58,810 --> 00:03:07,120
2 will<font color="#CCCCCC"> also write</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> go file</font><font color="#E5E5E5"> now we have</font>

56
00:03:03,459 --> 00:03:09,700
<font color="#E5E5E5">both F and</font><font color="#CCCCCC"> F</font><font color="#E5E5E5"> 2 writing to both file at</font>

57
00:03:07,120 --> 00:03:14,470
at the same<font color="#CCCCCC"> time so the result will be</font>

58
00:03:09,700 --> 00:03:17,019
pretty messy so I want<font color="#E5E5E5"> to disallow the</font>

59
00:03:14,470 --> 00:03:20,500
copy constructor from being used<font color="#E5E5E5"> what</font>

60
00:03:17,020 --> 00:03:23,170
can I do<font color="#E5E5E5"> if you</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> using super fancy</font>

61
00:03:20,500 --> 00:03:25,630
level already<font color="#E5E5E5"> it is pretty easy all you</font>

62
00:03:23,170 --> 00:03:29,429
<font color="#CCCCCC">need to do is that make the copy</font>

63
00:03:25,630 --> 00:03:31,810
constructor to be a deleted function and

64
00:03:29,430 --> 00:03:36,700
run it

65
00:03:31,810 --> 00:03:40,750
the<font color="#E5E5E5"> compile failed because</font><font color="#CCCCCC"> there's a</font>

66
00:03:36,700 --> 00:03:43,940
deleted function<font color="#CCCCCC"> that being used if</font>

67
00:03:40,750 --> 00:03:46,570
<font color="#E5E5E5">you're using C++</font><font color="#CCCCCC"> oh three it's</font><font color="#E5E5E5"> not</font>

68
00:03:43,940 --> 00:03:49,700
<font color="#E5E5E5">difficult either</font><font color="#CCCCCC"> all you need</font><font color="#E5E5E5"> to do is</font>

69
00:03:46,570 --> 00:03:52,519
make the copy constructor<font color="#CCCCCC"> a private</font>

70
00:03:49,700 --> 00:03:57,769
function<font color="#CCCCCC"> and we don't define</font><font color="#E5E5E5"> the</font>

71
00:03:52,520 --> 00:04:00,620
function now let's run it it<font color="#CCCCCC"> fails</font>

72
00:03:57,770 --> 00:04:05,360
because the the copy<font color="#E5E5E5"> constructor</font>

73
00:04:00,620 --> 00:04:08,090
function is private some of you may be

74
00:04:05,360 --> 00:04:11,360
clever enough<font color="#CCCCCC"> to</font><font color="#E5E5E5"> say hey this is</font><font color="#CCCCCC"> not</font>

75
00:04:08,090 --> 00:04:14,450
enough the open files member function

76
00:04:11,360 --> 00:04:19,130
can still use the copy constructor say

77
00:04:14,450 --> 00:04:22,760
it has a<font color="#E5E5E5"> function</font><font color="#CCCCCC"> called</font><font color="#E5E5E5"> g and g creates</font>

78
00:04:19,130 --> 00:04:26,719
another open file<font color="#CCCCCC"> f</font><font color="#E5E5E5"> - f this will work</font>

79
00:04:22,760 --> 00:04:31,820
<font color="#E5E5E5">right let's learn it build</font><font color="#CCCCCC"> still failed</font>

80
00:04:26,720 --> 00:04:34,280
<font color="#E5E5E5">but now it</font><font color="#CCCCCC"> fills with a message that she</font>

81
00:04:31,820 --> 00:04:37,969
prefers<font color="#CCCCCC"> forbids ticket Declaration of G</font>

82
00:04:34,280 --> 00:04:40,450
with no type although function G can

83
00:04:37,970 --> 00:04:43,280
access the copy constructor<font color="#CCCCCC"> alright</font>

84
00:04:40,450 --> 00:04:45,670
since we<font color="#E5E5E5"> only have declared the copy</font>

85
00:04:43,280 --> 00:04:48,619
constructor we have not<font color="#E5E5E5"> defined</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> so</font>

86
00:04:45,670 --> 00:04:52,730
<font color="#CCCCCC">function G cannot find</font><font color="#E5E5E5"> that the body of</font>

87
00:04:48,620 --> 00:04:55,460
the copy constructor so as a result

88
00:04:52,730 --> 00:04:59,600
<font color="#E5E5E5">nobody can use the copy constructor</font>

89
00:04:55,460 --> 00:05:04,070
anymore and we can use the same<font color="#CCCCCC"> method</font>

90
00:04:59,600 --> 00:05:07,880
<font color="#CCCCCC">to disable the copy assignment operator</font>

91
00:05:04,070 --> 00:05:10,870
also this method<font color="#CCCCCC"> can be used to disable</font>

92
00:05:07,880 --> 00:05:15,230
<font color="#E5E5E5">any function the default constructor</font>

93
00:05:10,870 --> 00:05:17,870
<font color="#CCCCCC">destructor or say the open</font><font color="#E5E5E5"> file has</font>

94
00:05:15,230 --> 00:05:20,780
inherited a function called<font color="#CCCCCC"> writeline</font>

95
00:05:17,870 --> 00:05:23,300
<font color="#CCCCCC">and we don't want the open file to use</font>

96
00:05:20,780 --> 00:05:26,369
that function<font color="#CCCCCC"> right line</font><font color="#E5E5E5"> we can use this</font>

97
00:05:23,300 --> 00:05:29,820
method<font color="#E5E5E5"> to turn that function off</font>

98
00:05:26,370 --> 00:05:32,580
speaking of destructor<font color="#E5E5E5"> is this a good</font>

99
00:05:29,820 --> 00:05:37,050
<font color="#CCCCCC">idea</font><font color="#E5E5E5"> to really turn off the destructor</font>

100
00:05:32,580 --> 00:05:40,020
like this now we have defined<font color="#CCCCCC"> the open</font>

101
00:05:37,050 --> 00:05:43,020
files destructor to be<font color="#E5E5E5"> private and</font><font color="#CCCCCC"> we</font>

102
00:05:40,020 --> 00:05:46,139
have not defined<font color="#E5E5E5"> it so</font><font color="#CCCCCC"> nobody can use</font>

103
00:05:43,020 --> 00:05:51,448
the open files destructor anymore<font color="#CCCCCC"> it is</font>

104
00:05:46,139 --> 00:05:54,120
<font color="#E5E5E5">really a good</font><font color="#CCCCCC"> idea apparently not an</font>

105
00:05:51,449 --> 00:05:56,550
<font color="#E5E5E5">object must be destructed one way or</font>

106
00:05:54,120 --> 00:05:59,729
another<font color="#CCCCCC"> otherwise some resource</font><font color="#E5E5E5"> is</font>

107
00:05:56,550 --> 00:06:05,370
doomed to be leaked<font color="#E5E5E5"> so we have to give a</font>

108
00:05:59,729 --> 00:06:07,500
body to the<font color="#CCCCCC"> destructor however some time</font>

109
00:06:05,370 --> 00:06:11,910
it does make sense to<font color="#CCCCCC"> have a private</font>

110
00:06:07,500 --> 00:06:16,139
<font color="#E5E5E5">destructor let's remove all the others</font>

111
00:06:11,910 --> 00:06:21,330
and take a closer look<font color="#CCCCCC"> at the private</font>

112
00:06:16,139 --> 00:06:24,419
<font color="#CCCCCC">the destructor now we only have</font><font color="#E5E5E5"> a</font>

113
00:06:21,330 --> 00:06:28,889
constructor and a destructor<font color="#E5E5E5"> and if we</font>

114
00:06:24,419 --> 00:06:33,180
compile the program<font color="#E5E5E5"> it will fail because</font>

115
00:06:28,889 --> 00:06:37,020
the destructor is private since the<font color="#E5E5E5"> open</font>

116
00:06:33,180 --> 00:06:40,229
<font color="#E5E5E5">file</font><font color="#CCCCCC"> F is stored on stack</font><font color="#E5E5E5"> once the F is</font>

117
00:06:37,020 --> 00:06:42,750
out of<font color="#E5E5E5"> scope the stack unwind and F will</font>

118
00:06:40,229 --> 00:06:44,789
be destructed<font color="#E5E5E5"> and the since main</font>

119
00:06:42,750 --> 00:06:48,240
function has no access<font color="#E5E5E5"> to the private</font>

120
00:06:44,789 --> 00:06:51,340
function of destructor<font color="#E5E5E5"> of open file this</font>

121
00:06:48,240 --> 00:06:54,470
will not compile

122
00:06:51,340 --> 00:06:57,440
so this kind<font color="#E5E5E5"> of open file is invincible</font>

123
00:06:54,470 --> 00:07:01,940
<font color="#CCCCCC">it cannot</font><font color="#E5E5E5"> be destroyed</font><font color="#CCCCCC"> by anyone else</font>

124
00:06:57,440 --> 00:07:05,660
except itself<font color="#E5E5E5"> and its friends yeah</font>

125
00:07:01,940 --> 00:07:07,850
<font color="#E5E5E5">friends</font><font color="#CCCCCC"> are worse</font><font color="#E5E5E5"> than enemies this kind</font>

126
00:07:05,660 --> 00:07:10,930
of a<font color="#CCCCCC"> mechanism sometimes are used by</font>

127
00:07:07,850 --> 00:07:14,150
reference counting shared pointers<font color="#CCCCCC"> a</font>

128
00:07:10,930 --> 00:07:16,160
reference counting shared pointer counts

129
00:07:14,150 --> 00:07:19,400
the number of pointers<font color="#E5E5E5"> that points to</font>

130
00:07:16,160 --> 00:07:24,920
itself<font color="#E5E5E5"> and once that count reached zero</font>

131
00:07:19,400 --> 00:07:27,530
it commits suicide<font color="#CCCCCC"> in our example of</font>

132
00:07:24,920 --> 00:07:30,080
<font color="#CCCCCC">Open File</font><font color="#E5E5E5"> since it doesn't commit</font>

133
00:07:27,530 --> 00:07:33,159
suicide and it doesn't have<font color="#CCCCCC"> friends so</font>

134
00:07:30,080 --> 00:07:37,789
<font color="#CCCCCC">we have to</font><font color="#E5E5E5"> provide a public interface</font>

135
00:07:33,160 --> 00:07:41,660
<font color="#E5E5E5">let's call it destroy me</font><font color="#CCCCCC"> to delete</font><font color="#E5E5E5"> this</font>

136
00:07:37,790 --> 00:07:46,850
object<font color="#E5E5E5"> and in the main</font><font color="#CCCCCC"> function we</font><font color="#E5E5E5"> can</font>

137
00:07:41,660 --> 00:07:51,080
call F dot destroy me to destroy the

138
00:07:46,850 --> 00:07:52,840
<font color="#E5E5E5">open file</font><font color="#CCCCCC"> F this sounds it alright let's</font>

139
00:07:51,080 --> 00:07:56,780
<font color="#CCCCCC">run it</font>

140
00:07:52,840 --> 00:07:59,659
oops<font color="#E5E5E5"> it's still failed and it still</font>

141
00:07:56,780 --> 00:08:03,580
reports the same error<font color="#E5E5E5"> the open file</font><font color="#CCCCCC"> the</font>

142
00:07:59,660 --> 00:08:07,580
destructor is private<font color="#E5E5E5"> now what happened</font>

143
00:08:03,580 --> 00:08:10,039
<font color="#E5E5E5">since F is stored on stack even though</font>

144
00:08:07,580 --> 00:08:13,940
we have called<font color="#E5E5E5"> F dot destroy me to</font>

145
00:08:10,040 --> 00:08:18,920
destroy the<font color="#E5E5E5"> F when the stack unwind F</font>

146
00:08:13,940 --> 00:08:22,210
will<font color="#CCCCCC"> be destroyed again</font><font color="#E5E5E5"> so the private</font>

147
00:08:18,920 --> 00:08:25,760
<font color="#CCCCCC">the destructor will be invoked</font><font color="#E5E5E5"> anyway</font>

148
00:08:22,210 --> 00:08:29,690
then how can<font color="#E5E5E5"> we use an object like</font><font color="#CCCCCC"> Open</font>

149
00:08:25,760 --> 00:08:30,889
<font color="#CCCCCC">File which</font><font color="#E5E5E5"> has a private destructor we</font>

150
00:08:29,690 --> 00:08:41,169
could

151
00:08:30,889 --> 00:08:47,260
<font color="#CCCCCC">stall</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> F on stack and then call</font><font color="#E5E5E5"> F</font>

152
00:08:41,169 --> 00:08:53,269
destroy me<font color="#CCCCCC"> now let's run it</font>

153
00:08:47,260 --> 00:08:56,180
Bravo<font color="#E5E5E5"> now the open file is destructed so</font>

154
00:08:53,269 --> 00:08:58,670
the conclusion<font color="#E5E5E5"> is a class like open file</font>

155
00:08:56,180 --> 00:09:02,540
which has<font color="#CCCCCC"> our private destructor</font><font color="#E5E5E5"> can</font>

156
00:08:58,670 --> 00:09:07,519
only be stored on heap<font color="#CCCCCC"> it cannot</font><font color="#E5E5E5"> be</font>

157
00:09:02,540 --> 00:09:10,250
stored on stack this<font color="#CCCCCC"> sometime can be</font>

158
00:09:07,519 --> 00:09:12,800
useful in<font color="#E5E5E5"> the embedded programming where</font>

159
00:09:10,250 --> 00:09:15,519
the stack size is small and the people

160
00:09:12,800 --> 00:09:18,769
<font color="#E5E5E5">often time get a stack</font><font color="#CCCCCC"> overflow</font>

161
00:09:15,519 --> 00:09:21,740
you could let the heavyweight classes to

162
00:09:18,769 --> 00:09:26,089
<font color="#E5E5E5">have private the destructor so that they</font>

163
00:09:21,740 --> 00:09:28,640
<font color="#E5E5E5">can only</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> stored on the heap you kind</font>

164
00:09:26,089 --> 00:09:32,589
of<font color="#E5E5E5"> enforced that these heavy with</font>

165
00:09:28,640 --> 00:09:36,140
objects<font color="#E5E5E5"> not to be stored on the stack</font><font color="#CCCCCC"> a</font>

166
00:09:32,589 --> 00:09:38,240
summary of disallowing functions for<font color="#E5E5E5"> the</font>

167
00:09:36,140 --> 00:09:40,640
<font color="#E5E5E5">constants 11 you can</font><font color="#CCCCCC"> always use the</font>

168
00:09:38,240 --> 00:09:44,029
keyword delete to delete the function

169
00:09:40,640 --> 00:09:47,410
for simplify<font color="#E5E5E5"> so</font><font color="#CCCCCC"> 3 you can declare the</font>

170
00:09:44,029 --> 00:09:50,180
<font color="#CCCCCC">function to be private but not define it</font>

171
00:09:47,410 --> 00:09:53,240
private the destructor can be used to

172
00:09:50,180 --> 00:09:57,469
force<font color="#E5E5E5"> the object not to be stored on</font>

173
00:09:53,240 --> 00:09:59,779
stack that's all for today thank you for

174
00:09:57,470 --> 00:10:02,300
watching feel free to subscribe<font color="#CCCCCC"> to my</font>

175
00:09:59,779 --> 00:10:04,399
<font color="#CCCCCC">channel so when I post a new</font><font color="#E5E5E5"> video you</font>

176
00:10:02,300 --> 00:10:06,170
will<font color="#E5E5E5"> be updated</font><font color="#CCCCCC"> or you can go</font><font color="#E5E5E5"> to my</font>

177
00:10:04,399 --> 00:10:09,640
<font color="#E5E5E5">channels home page and see what</font><font color="#CCCCCC"> I'm</font>

178
00:10:06,170 --> 00:10:09,640
offering<font color="#E5E5E5"> today bye bye</font>

