1
00:00:05,300 --> 00:00:13,049
hello everyone today<font color="#CCCCCC"> we</font><font color="#E5E5E5"> will talk about</font>

2
00:00:08,039 --> 00:00:15,930
<font color="#CCCCCC">Const with functions say we have a class</font>

3
00:00:13,049 --> 00:00:19,350
<font color="#E5E5E5">dog and dog has an integer of age and</font>

4
00:00:15,930 --> 00:00:22,080
the string of name<font color="#E5E5E5"> and the dog has a</font>

5
00:00:19,350 --> 00:00:25,290
constructor<font color="#CCCCCC"> that initialized as age and</font>

6
00:00:22,080 --> 00:00:28,680
the name and here the same<font color="#E5E5E5"> dog has a</font>

7
00:00:25,290 --> 00:00:32,189
function called<font color="#E5E5E5"> set H and which sets H</font>

8
00:00:28,680 --> 00:00:35,250
to<font color="#E5E5E5"> the parameter of a and in the main</font>

9
00:00:32,189 --> 00:00:38,160
function<font color="#CCCCCC"> I create</font><font color="#E5E5E5"> a dog D and I have an</font>

10
00:00:35,250 --> 00:00:42,059
integer<font color="#CCCCCC"> I equal to</font><font color="#E5E5E5"> 9 and then I call d</font>

11
00:00:38,160 --> 00:00:46,288
dot set<font color="#E5E5E5"> a GI and print out and then</font>

12
00:00:42,059 --> 00:00:48,980
print out the<font color="#E5E5E5"> I so this will print out</font><font color="#CCCCCC"> 9</font>

13
00:00:46,289 --> 00:00:52,289
so<font color="#E5E5E5"> far so good</font>

14
00:00:48,980 --> 00:00:56,309
suppose the set H<font color="#CCCCCC"> function not only</font><font color="#E5E5E5"> use</font>

15
00:00:52,289 --> 00:01:00,600
a to set H it also makes some change to

16
00:00:56,309 --> 00:01:02,300
<font color="#E5E5E5">the parameter a say it an increment a by</font>

17
00:01:00,600 --> 00:01:05,280
<font color="#E5E5E5">1</font>

18
00:01:02,300 --> 00:01:08,520
remember the set<font color="#E5E5E5"> H function takes the</font>

19
00:01:05,280 --> 00:01:11,490
<font color="#E5E5E5">parameter by reference so when I</font>

20
00:01:08,520 --> 00:01:15,149
increment a it also incremented the

21
00:01:11,490 --> 00:01:19,229
original valuable I so if we learn the

22
00:01:15,149 --> 00:01:22,500
program it prints out<font color="#E5E5E5"> 10 because I has</font>

23
00:01:19,229 --> 00:01:26,130
been<font color="#E5E5E5"> changed</font><font color="#CCCCCC"> to 10 by the set H function</font>

24
00:01:22,500 --> 00:01:28,770
and say I don't<font color="#E5E5E5"> want that to</font><font color="#CCCCCC"> happen I is</font>

25
00:01:26,130 --> 00:01:31,259
a local variable<font color="#CCCCCC"> in the main function</font>

26
00:01:28,770 --> 00:01:36,289
and I don't<font color="#E5E5E5"> want the set H</font><font color="#CCCCCC"> function to</font>

27
00:01:31,259 --> 00:01:41,310
<font color="#E5E5E5">change it what I can do is add a</font><font color="#CCCCCC"> cost</font>

28
00:01:36,289 --> 00:01:44,039
over<font color="#E5E5E5"> here now I'm passing</font><font color="#CCCCCC"> I as a Const</font>

29
00:01:41,310 --> 00:01:47,939
integer reference to the set H function

30
00:01:44,039 --> 00:01:49,840
<font color="#E5E5E5">so if I compile the program now it will</font>

31
00:01:47,939 --> 00:01:54,579
fail

32
00:01:49,840 --> 00:01:58,420
and if we remove the<font color="#CCCCCC"> A+ pass it will</font>

33
00:01:54,579 --> 00:02:01,149
succeed<font color="#E5E5E5"> so this is how a constant</font>

34
00:01:58,420 --> 00:02:04,780
<font color="#CCCCCC">reference is passed as a parameter to a</font>

35
00:02:01,149 --> 00:02:07,299
function<font color="#CCCCCC"> Coast reference parameter is</font>

36
00:02:04,780 --> 00:02:10,239
widely<font color="#CCCCCC"> used in suppressants functions</font>

37
00:02:07,299 --> 00:02:14,769
<font color="#E5E5E5">and you should be using it whenever it</font>

38
00:02:10,239 --> 00:02:18,190
<font color="#CCCCCC">is appropriate now consider if we remove</font>

39
00:02:14,769 --> 00:02:20,530
the reference<font color="#E5E5E5"> and the set</font><font color="#CCCCCC"> age</font><font color="#E5E5E5"> function</font>

40
00:02:18,190 --> 00:02:25,150
only takes a constant<font color="#E5E5E5"> integer as a</font>

41
00:02:20,530 --> 00:02:28,569
parameter in this case<font color="#E5E5E5"> the Const is not</font>

42
00:02:25,150 --> 00:02:31,750
very useful<font color="#CCCCCC"> it still means that</font><font color="#E5E5E5"> a cannot</font>

43
00:02:28,569 --> 00:02:34,200
<font color="#CCCCCC">be changed inside the function but it is</font>

44
00:02:31,750 --> 00:02:37,870
not as useful as it<font color="#E5E5E5"> is used as a</font>

45
00:02:34,200 --> 00:02:41,230
constant reference<font color="#E5E5E5"> parameter because the</font>

46
00:02:37,870 --> 00:02:43,870
parameter is passed by value<font color="#E5E5E5"> so in the</font>

47
00:02:41,230 --> 00:02:47,649
main function when I call set H I<font color="#CCCCCC"> I'm</font>

48
00:02:43,870 --> 00:02:50,799
making a copy of I and pass that<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the</font>

49
00:02:47,650 --> 00:02:54,280
function set H and whether the function

50
00:02:50,799 --> 00:02:57,700
<font color="#E5E5E5">set age will use that copy as a Const or</font>

51
00:02:54,280 --> 00:03:02,049
non Const<font color="#CCCCCC"> I don't care</font><font color="#E5E5E5"> it's a copy</font>

52
00:02:57,700 --> 00:03:04,570
anyway<font color="#CCCCCC"> do whatever you want so from the</font>

53
00:03:02,049 --> 00:03:07,989
colors point of view this Const<font color="#CCCCCC"> is</font>

54
00:03:04,570 --> 00:03:11,380
useless if<font color="#E5E5E5"> I overload this function with</font>

55
00:03:07,989 --> 00:03:13,240
another<font color="#E5E5E5"> function</font><font color="#CCCCCC"> that takes a</font><font color="#E5E5E5"> integer as</font>

56
00:03:11,380 --> 00:03:15,549
parameter

57
00:03:13,240 --> 00:03:21,240
the<font color="#CCCCCC"> caller cannot differentiate these</font>

58
00:03:15,550 --> 00:03:24,730
two<font color="#E5E5E5"> functions</font><font color="#CCCCCC"> so if we compile it it</font>

59
00:03:21,240 --> 00:03:29,290
will fail and with the message that<font color="#CCCCCC"> a</font>

60
00:03:24,730 --> 00:03:31,690
set age cannot be overloaded so from the

61
00:03:29,290 --> 00:03:39,299
colors point<font color="#E5E5E5"> these two function are the</font>

62
00:03:31,690 --> 00:03:44,380
same<font color="#E5E5E5"> so these are the</font><font color="#CCCCCC"> examples of</font><font color="#E5E5E5"> Const</font>

63
00:03:39,300 --> 00:03:49,780
parameter and now let's look at an some

64
00:03:44,380 --> 00:03:52,930
example of<font color="#E5E5E5"> cost return value and here we</font>

65
00:03:49,780 --> 00:03:57,280
have a function<font color="#E5E5E5"> get name which returns a</font>

66
00:03:52,930 --> 00:03:59,140
Const<font color="#CCCCCC"> stream reference and the reason we</font>

67
00:03:57,280 --> 00:04:01,720
want<font color="#E5E5E5"> to return accounts to</font><font color="#CCCCCC"> stream</font>

68
00:03:59,140 --> 00:04:05,500
reference<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> same reason</font><font color="#CCCCCC"> why we want</font>

69
00:04:01,720 --> 00:04:08,440
a Const<font color="#E5E5E5"> reference parameter we want to</font>

70
00:04:05,500 --> 00:04:10,750
return by reference<font color="#E5E5E5"> to improve the</font>

71
00:04:08,440 --> 00:04:13,690
efficiency<font color="#CCCCCC"> of the program</font><font color="#E5E5E5"> and we</font><font color="#CCCCCC"> want to</font>

72
00:04:10,750 --> 00:04:17,140
return<font color="#E5E5E5"> a Const reference so that the</font>

73
00:04:13,690 --> 00:04:21,040
<font color="#CCCCCC">caller cannot change the value that the</font>

74
00:04:17,140 --> 00:04:25,979
variable that<font color="#E5E5E5"> I returned and in the main</font>

75
00:04:21,040 --> 00:04:33,000
function<font color="#CCCCCC"> I</font><font color="#E5E5E5"> will use a Const string</font>

76
00:04:25,980 --> 00:04:36,690
reference<font color="#CCCCCC"> n equal to t dot get name</font><font color="#E5E5E5"> and</font>

77
00:04:33,000 --> 00:04:36,690
then print it<font color="#E5E5E5"> out</font>

78
00:04:40,300 --> 00:04:47,290
<font color="#E5E5E5">the knee is printed out so this is</font><font color="#CCCCCC"> how</font>

79
00:04:43,850 --> 00:04:50,300
<font color="#E5E5E5">use accounts the reference return value</font>

80
00:04:47,290 --> 00:04:53,060
now again let's consider remove the

81
00:04:50,300 --> 00:04:57,050
reference<font color="#E5E5E5"> and it returns accounts the</font>

82
00:04:53,060 --> 00:05:01,040
stream and now the<font color="#CCCCCC"> cost is completely</font>

83
00:04:57,050 --> 00:05:03,980
useless because<font color="#CCCCCC"> the</font><font color="#E5E5E5"> name is returned by</font>

84
00:05:01,040 --> 00:05:06,830
value<font color="#E5E5E5"> so what the function returned is a</font>

85
00:05:03,980 --> 00:05:10,100
copy<font color="#CCCCCC"> of the name which is a temporary</font>

86
00:05:06,830 --> 00:05:13,750
and it doesn't make any<font color="#E5E5E5"> sense for a</font>

87
00:05:10,100 --> 00:05:16,310
temporary to be defined as a constant

88
00:05:13,750 --> 00:05:23,060
now let's consider a even more

89
00:05:16,310 --> 00:05:25,430
<font color="#E5E5E5">interesting case Const function we have</font>

90
00:05:23,060 --> 00:05:28,490
a function called<font color="#E5E5E5"> print dot name and</font>

91
00:05:25,430 --> 00:05:33,860
after<font color="#CCCCCC"> the function signature there</font><font color="#E5E5E5"> is a</font>

92
00:05:28,490 --> 00:05:36,680
constant but<font color="#E5E5E5"> at this</font><font color="#CCCCCC"> one this means this</font>

93
00:05:33,860 --> 00:05:41,270
function<font color="#E5E5E5"> will not</font><font color="#CCCCCC"> change any of the</font>

94
00:05:36,680 --> 00:05:44,780
member variables of this class so in the

95
00:05:41,270 --> 00:05:48,890
main<font color="#CCCCCC"> function we</font><font color="#E5E5E5"> could call d dot print</font>

96
00:05:44,780 --> 00:05:49,960
dot name and let's do print something

97
00:05:48,890 --> 00:05:54,310
<font color="#E5E5E5">different</font>

98
00:05:49,960 --> 00:05:58,989
<font color="#E5E5E5">cost can run it</font>

99
00:05:54,310 --> 00:06:01,870
and it prints out<font color="#CCCCCC"> dummy</font><font color="#E5E5E5"> cost however if</font>

100
00:05:58,990 --> 00:06:06,850
this function<font color="#E5E5E5"> change then member</font>

101
00:06:01,870 --> 00:06:11,530
variables say age plus<font color="#E5E5E5"> class and this</font>

102
00:06:06,850 --> 00:06:14,020
code doesn't<font color="#E5E5E5"> compile and another thing</font>

103
00:06:11,530 --> 00:06:16,090
that<font color="#CCCCCC"> you should remember</font><font color="#E5E5E5"> is even if this</font>

104
00:06:14,020 --> 00:06:18,820
function<font color="#E5E5E5"> doesn't change any of the</font>

105
00:06:16,090 --> 00:06:23,590
member valuables but it call another

106
00:06:18,820 --> 00:06:27,610
function<font color="#E5E5E5"> get name which is not a</font>

107
00:06:23,590 --> 00:06:29,859
<font color="#E5E5E5">constant function and this still doesn't</font>

108
00:06:27,610 --> 00:06:31,750
compile even though the get name

109
00:06:29,860 --> 00:06:35,290
<font color="#E5E5E5">function doesn't change the member</font>

110
00:06:31,750 --> 00:06:38,110
variables at all<font color="#E5E5E5"> so a Const function can</font>

111
00:06:35,290 --> 00:06:41,850
<font color="#E5E5E5">only call another constant function in</font>

112
00:06:38,110 --> 00:06:45,040
order<font color="#E5E5E5"> to maintain the</font><font color="#CCCCCC"> constant nests</font>

113
00:06:41,850 --> 00:06:48,370
another thing to note is<font color="#E5E5E5"> the constant s</font>

114
00:06:45,040 --> 00:06:51,700
can<font color="#CCCCCC"> be used to overload the function so</font>

115
00:06:48,370 --> 00:06:55,480
if we make a copy of<font color="#E5E5E5"> this function and</font>

116
00:06:51,700 --> 00:07:00,190
<font color="#CCCCCC">remove the cost</font><font color="#E5E5E5"> these two are different</font>

117
00:06:55,480 --> 00:07:05,320
functions<font color="#CCCCCC"> and let's print out non</font>

118
00:07:00,190 --> 00:07:07,690
constant now the question is when this

119
00:07:05,320 --> 00:07:11,500
<font color="#E5E5E5">function will be invoked and when this</font>

120
00:07:07,690 --> 00:07:14,110
function<font color="#E5E5E5"> will be invoked the answer is</font>

121
00:07:11,500 --> 00:07:16,870
this function will be<font color="#E5E5E5"> invoked when the</font>

122
00:07:14,110 --> 00:07:19,740
top is a Const<font color="#E5E5E5"> and the dysfunction will</font>

123
00:07:16,870 --> 00:07:22,840
be invoked<font color="#E5E5E5"> when the talk is not a cost</font>

124
00:07:19,740 --> 00:07:25,690
for example<font color="#CCCCCC"> we have a talk d and the</font>

125
00:07:22,840 --> 00:07:29,320
<font color="#CCCCCC">desti should call the non constant</font>

126
00:07:25,690 --> 00:07:33,790
version of the<font color="#E5E5E5"> print</font><font color="#CCCCCC"> out name and say we</font>

127
00:07:29,320 --> 00:07:40,120
have another<font color="#E5E5E5"> Const talk</font><font color="#CCCCCC"> T</font><font color="#E5E5E5"> 2 and then</font>

128
00:07:33,790 --> 00:07:42,670
<font color="#E5E5E5">call T 2 dot print</font><font color="#CCCCCC"> dot name and this one</font>

129
00:07:40,120 --> 00:07:46,250
cannot be<font color="#E5E5E5"> cat name you should change it</font>

130
00:07:42,670 --> 00:07:49,289
to name<font color="#E5E5E5"> and now let's run it</font>

131
00:07:46,250 --> 00:07:52,020
so the first one<font color="#CCCCCC"> is calling</font><font color="#E5E5E5"> the nun</font>

132
00:07:49,289 --> 00:07:53,909
Const function<font color="#CCCCCC"> print</font><font color="#E5E5E5"> up name and</font><font color="#CCCCCC"> the</font>

133
00:07:52,020 --> 00:07:58,889
second<font color="#E5E5E5"> one is calling the Const function</font>

134
00:07:53,910 --> 00:08:01,460
<font color="#E5E5E5">print up name so this is how a Const</font>

135
00:07:58,889 --> 00:08:05,729
function can<font color="#CCCCCC"> be overloaded</font><font color="#E5E5E5"> with a</font>

136
00:08:01,460 --> 00:08:08,008
non-constant the last thing to note<font color="#E5E5E5"> is a</font>

137
00:08:05,729 --> 00:08:10,949
function that<font color="#E5E5E5"> takes a constant reference</font>

138
00:08:08,009 --> 00:08:13,020
<font color="#E5E5E5">parameter can also be overloaded with a</font>

139
00:08:10,949 --> 00:08:16,289
function<font color="#CCCCCC"> that</font><font color="#E5E5E5"> takes a reference</font>

140
00:08:13,020 --> 00:08:18,539
parameter the question is under what

141
00:08:16,289 --> 00:08:20,729
<font color="#E5E5E5">circumstance this function will be</font>

142
00:08:18,539 --> 00:08:24,570
invoked<font color="#E5E5E5"> and under water circle sometimes</font>

143
00:08:20,729 --> 00:08:26,789
<font color="#E5E5E5">this function will be invoked I'd like</font>

144
00:08:24,570 --> 00:08:29,130
to leave<font color="#CCCCCC"> it as a homework</font><font color="#E5E5E5"> for you to</font>

145
00:08:26,789 --> 00:08:31,139
<font color="#E5E5E5">figure out if you cannot figure out</font>

146
00:08:29,130 --> 00:08:34,919
<font color="#E5E5E5">watch my another video called</font>

147
00:08:31,139 --> 00:08:37,500
understanding<font color="#CCCCCC"> L value and our value</font><font color="#E5E5E5"> I'll</font>

148
00:08:34,919 --> 00:08:41,640
publish<font color="#CCCCCC"> the answer</font><font color="#E5E5E5"> if there are too many</font>

149
00:08:37,500 --> 00:08:43,740
<font color="#E5E5E5">people having trouble with it in summary</font>

150
00:08:41,640 --> 00:08:46,860
when the constant is used with the

151
00:08:43,740 --> 00:08:49,980
<font color="#E5E5E5">function it can be used to specify cost</font>

152
00:08:46,860 --> 00:08:54,690
parameters or constitute term value or

153
00:08:49,980 --> 00:08:57,029
Const function<font color="#E5E5E5"> that's all for today</font><font color="#CCCCCC"> feel</font>

154
00:08:54,690 --> 00:08:59,220
free<font color="#CCCCCC"> to subscribe to</font><font color="#E5E5E5"> my</font><font color="#CCCCCC"> channel</font><font color="#E5E5E5"> so when</font>

155
00:08:57,029 --> 00:09:01,800
I<font color="#E5E5E5"> post a</font><font color="#CCCCCC"> new video you'll be updated or</font>

156
00:08:59,220 --> 00:09:06,410
you can go<font color="#E5E5E5"> to my channels home page and</font>

157
00:09:01,800 --> 00:09:06,410
see<font color="#CCCCCC"> what I'm offering</font><font color="#E5E5E5"> today</font><font color="#CCCCCC"> bye bye</font>

