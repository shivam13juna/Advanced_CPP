1
00:00:04,529 --> 00:00:09,990
hello everyone starting from today we

2
00:00:07,769 --> 00:00:13,440
<font color="#E5E5E5">are</font><font color="#CCCCCC"> going to have a Celia</font><font color="#E5E5E5"> of talk about</font>

3
00:00:09,990 --> 00:00:16,259
the<font color="#CCCCCC"> namespace and the name lookup</font><font color="#E5E5E5"> we'll</font>

4
00:00:13,440 --> 00:00:20,579
<font color="#E5E5E5">start with some basics and then move on</font>

5
00:00:16,260 --> 00:00:23,779
<font color="#E5E5E5">to some more advanced stuff</font><font color="#CCCCCC"> sea plasmas</font>

6
00:00:20,579 --> 00:00:27,060
<font color="#CCCCCC">namespace has</font><font color="#E5E5E5"> an important keyword using</font>

7
00:00:23,779 --> 00:00:30,810
this<font color="#E5E5E5"> keyword can be used in two</font><font color="#CCCCCC"> ways</font>

8
00:00:27,060 --> 00:00:33,690
number one is using<font color="#E5E5E5"> directive it is to</font>

9
00:00:30,810 --> 00:00:36,570
bring<font color="#E5E5E5"> all namespace members into current</font>

10
00:00:33,690 --> 00:00:39,470
scope so that<font color="#CCCCCC"> you can use them without</font><font color="#E5E5E5"> a</font>

11
00:00:36,570 --> 00:00:43,530
qualifier in front of them

12
00:00:39,470 --> 00:00:46,410
<font color="#E5E5E5">so if I have using namespace stood I'm</font>

13
00:00:43,530 --> 00:00:50,940
bringing every name understood into

14
00:00:46,410 --> 00:00:54,330
current scope<font color="#E5E5E5"> a second usage is using</font>

15
00:00:50,940 --> 00:00:57,570
declaration using declaration itself can

16
00:00:54,330 --> 00:01:00,629
be<font color="#E5E5E5"> used in two</font><font color="#CCCCCC"> ways a it brings one</font>

17
00:00:57,570 --> 00:01:05,280
specific namespace member into current

18
00:01:00,630 --> 00:01:07,229
scope<font color="#E5E5E5"> so if I have using stood out after</font>

19
00:01:05,280 --> 00:01:12,270
that I can use the out without<font color="#E5E5E5"> the</font>

20
00:01:07,229 --> 00:01:16,289
qualifier<font color="#CCCCCC"> B brings a member from</font><font color="#E5E5E5"> base</font>

21
00:01:12,270 --> 00:01:20,179
class to current classes scope<font color="#E5E5E5"> so this</font>

22
00:01:16,290 --> 00:01:23,190
is working<font color="#CCCCCC"> with class and not namespace</font>

23
00:01:20,180 --> 00:01:26,190
using the<font color="#E5E5E5"> R active can only work</font><font color="#CCCCCC"> with</font>

24
00:01:23,190 --> 00:01:31,650
name space using declaration can work

25
00:01:26,190 --> 00:01:34,798
with either namespace<font color="#CCCCCC"> or class now let's</font>

26
00:01:31,650 --> 00:01:37,680
look at example is classes in it we<font color="#E5E5E5"> have</font>

27
00:01:34,799 --> 00:01:40,890
a Class<font color="#CCCCCC"> B and Class</font><font color="#E5E5E5"> B has a public</font>

28
00:01:37,680 --> 00:01:44,100
function f we<font color="#CCCCCC"> have a class D which is</font>

29
00:01:40,890 --> 00:01:46,860
<font color="#E5E5E5">derived from B it has</font><font color="#CCCCCC"> a function G</font><font color="#E5E5E5"> and</font>

30
00:01:44,100 --> 00:01:50,229
<font color="#E5E5E5">function H</font>

31
00:01:46,860 --> 00:01:53,799
this is a use interactive<font color="#CCCCCC"> and this is a</font>

32
00:01:50,229 --> 00:01:55,990
using decoration using<font color="#CCCCCC"> deductive and</font><font color="#E5E5E5"> a</font>

33
00:01:53,799 --> 00:01:59,789
<font color="#E5E5E5">using declaration when working with</font>

34
00:01:55,990 --> 00:02:03,460
namespaces they can be used either under

35
00:01:59,789 --> 00:02:10,030
global scope<font color="#CCCCCC"> like</font><font color="#E5E5E5"> this or in the local</font>

36
00:02:03,460 --> 00:02:13,299
<font color="#E5E5E5">function scope like this this is a using</font>

37
00:02:10,030 --> 00:02:15,730
decoration for class member it brings

38
00:02:13,300 --> 00:02:19,390
the function f from the parent class

39
00:02:15,730 --> 00:02:24,339
<font color="#E5E5E5">class</font><font color="#CCCCCC"> b into current class</font><font color="#E5E5E5"> with public</font>

40
00:02:19,390 --> 00:02:26,920
<font color="#E5E5E5">access you might be</font><font color="#CCCCCC"> wondering why do we</font>

41
00:02:24,340 --> 00:02:32,250
need to do that<font color="#E5E5E5"> isn't the function f</font>

42
00:02:26,920 --> 00:02:35,470
inherited by<font color="#E5E5E5"> D already the class D is</font>

43
00:02:32,250 --> 00:02:38,920
privately derived from B which means

44
00:02:35,470 --> 00:02:43,299
<font color="#E5E5E5">these public function becomes</font><font color="#CCCCCC"> this</font>

45
00:02:38,920 --> 00:02:46,390
private function so f<font color="#E5E5E5"> is this private</font>

46
00:02:43,299 --> 00:02:51,359
function if I don't use the decoration

47
00:02:46,390 --> 00:02:56,920
using declaration<font color="#E5E5E5"> then I create a D and</font>

48
00:02:51,359 --> 00:03:01,620
<font color="#CCCCCC">call d f8</font><font color="#E5E5E5"> this code will not compile</font>

49
00:02:56,920 --> 00:03:04,869
because<font color="#CCCCCC"> F is a private function</font><font color="#E5E5E5"> however</font>

50
00:03:01,620 --> 00:03:09,150
<font color="#CCCCCC">after using the</font><font color="#E5E5E5"> using declaration for</font>

51
00:03:04,870 --> 00:03:09,150
function f is called<font color="#E5E5E5"> will compile</font>

52
00:03:11,110 --> 00:03:17,000
you may have noticed the using

53
00:03:13,880 --> 00:03:20,690
declaration for class member is used in

54
00:03:17,000 --> 00:03:23,150
the class scope it cannot<font color="#E5E5E5"> be used in</font><font color="#CCCCCC"> a</font>

55
00:03:20,690 --> 00:03:26,630
local<font color="#E5E5E5"> scope it cannot be used in a</font>

56
00:03:23,150 --> 00:03:31,430
global scope<font color="#CCCCCC"> and</font><font color="#E5E5E5"> this guy is the</font><font color="#CCCCCC"> only</font>

57
00:03:26,630 --> 00:03:34,700
<font color="#E5E5E5">one can be used in the class cope so if</font>

58
00:03:31,430 --> 00:03:38,530
I have a using<font color="#CCCCCC"> declaration of a class</font>

59
00:03:34,700 --> 00:03:41,530
<font color="#E5E5E5">member in the global scope this is</font>

60
00:03:38,530 --> 00:03:41,530
illegal

61
00:03:42,730 --> 00:03:54,709
similarly if I<font color="#CCCCCC"> have a using declaration</font>

62
00:03:46,790 --> 00:03:57,130
of namespace member in the class scope

63
00:03:54,709 --> 00:04:02,380
<font color="#E5E5E5">this is also illegal</font>

64
00:03:57,130 --> 00:04:02,380
if I have a using elective

65
00:04:07,379 --> 00:04:12,290
in the class cope<font color="#E5E5E5"> this is also illegal</font>

66
00:04:13,209 --> 00:04:20,199
last example<font color="#CCCCCC"> again we have the base</font>

67
00:04:16,029 --> 00:04:23,049
<font color="#CCCCCC">Class B and the derived class D now D is</font>

68
00:04:20,199 --> 00:04:25,630
<font color="#E5E5E5">publicly derived from B so</font><font color="#CCCCCC"> it will</font>

69
00:04:23,050 --> 00:04:29,350
inherit B's public function as its own

70
00:04:25,630 --> 00:04:32,620
<font color="#CCCCCC">public function the B has a function f</font>

71
00:04:29,350 --> 00:04:36,280
with with the integer parameter D has a

72
00:04:32,620 --> 00:04:38,940
function f with no parameter<font color="#E5E5E5"> in the main</font>

73
00:04:36,280 --> 00:04:44,080
<font color="#E5E5E5">function I created a D and then called</font>

74
00:04:38,940 --> 00:04:46,630
<font color="#CCCCCC">df8 you would expect the function f of B</font>

75
00:04:44,080 --> 00:04:50,349
which takes an integer parameter<font color="#E5E5E5"> will</font><font color="#CCCCCC"> be</font>

76
00:04:46,630 --> 00:04:54,789
invoked but it will not this code will

77
00:04:50,350 --> 00:04:59,350
<font color="#CCCCCC">not compile it turns out this</font><font color="#E5E5E5"> function f</font>

78
00:04:54,789 --> 00:05:03,699
is shadowed by this<font color="#E5E5E5"> own function f this</font>

79
00:04:59,350 --> 00:05:09,599
<font color="#CCCCCC">is called named hiding to overcome</font><font color="#E5E5E5"> name</font>

80
00:05:03,699 --> 00:05:09,599
hiding we could use using<font color="#E5E5E5"> decoration</font>

81
00:05:12,430 --> 00:05:19,939
now this code will compile finally I

82
00:05:17,539 --> 00:05:23,360
want to introduce you anonymous

83
00:05:19,939 --> 00:05:26,409
<font color="#E5E5E5">namespace anonymous namespace is a</font>

84
00:05:23,360 --> 00:05:29,659
<font color="#E5E5E5">namespace that doesn't have a name and</font>

85
00:05:26,409 --> 00:05:32,869
as a result everything<font color="#E5E5E5"> inside</font><font color="#CCCCCC"> of the</font>

86
00:05:29,659 --> 00:05:36,800
namespace can be accessed within the

87
00:05:32,869 --> 00:05:39,889
same file so in the main<font color="#E5E5E5"> function I can</font>

88
00:05:36,800 --> 00:05:43,430
<font color="#E5E5E5">call the each function as if using the</font>

89
00:05:39,889 --> 00:05:47,839
elective is included implicitly<font color="#E5E5E5"> for the</font>

90
00:05:43,430 --> 00:05:52,759
<font color="#E5E5E5">anonymous namespace however you cannot</font>

91
00:05:47,839 --> 00:05:55,339
call the a function<font color="#CCCCCC"> from</font><font color="#E5E5E5"> another file so</font>

92
00:05:52,759 --> 00:06:01,419
this<font color="#E5E5E5"> is effectively similar to having</font>

93
00:05:55,339 --> 00:06:04,789
<font color="#E5E5E5">defined a global static function of H</font>

94
00:06:01,419 --> 00:06:07,938
however<font color="#E5E5E5"> this has the additional benefits</font>

95
00:06:04,789 --> 00:06:12,378
of<font color="#E5E5E5"> namespace for example if I have</font>

96
00:06:07,939 --> 00:06:14,930
another function<font color="#CCCCCC"> G and also have another</font>

97
00:06:12,379 --> 00:06:19,580
<font color="#CCCCCC">function G inside of the namespace and</font>

98
00:06:14,930 --> 00:06:22,759
when<font color="#CCCCCC"> H function</font><font color="#E5E5E5"> called G it will call</font>

99
00:06:19,580 --> 00:06:26,659
the local<font color="#E5E5E5"> version</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the G and not the</font>

100
00:06:22,759 --> 00:06:28,699
<font color="#CCCCCC">global version that's all for today next</font>

101
00:06:26,659 --> 00:06:31,899
<font color="#CCCCCC">time we will talk about connect lookup</font>

102
00:06:28,699 --> 00:06:31,899
<font color="#E5E5E5">keep tuned</font>

