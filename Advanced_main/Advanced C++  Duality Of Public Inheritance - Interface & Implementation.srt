1
00:00:05,060 --> 00:00:10,020
hello everyone today<font color="#CCCCCC"> we are</font><font color="#E5E5E5"> going to</font>

2
00:00:07,770 --> 00:00:13,230
talk about<font color="#E5E5E5"> the duality</font><font color="#CCCCCC"> of public</font>

3
00:00:10,020 --> 00:00:15,719
inheritance the<font color="#E5E5E5"> seemingly innocent</font>

4
00:00:13,230 --> 00:00:19,170
<font color="#E5E5E5">public inheritance actually has a</font>

5
00:00:15,719 --> 00:00:21,599
duality<font color="#CCCCCC"> in it which</font><font color="#E5E5E5"> is the inheritance</font>

6
00:00:19,170 --> 00:00:25,380
<font color="#E5E5E5">of</font><font color="#CCCCCC"> interphase and that</font><font color="#E5E5E5"> the inheritance</font>

7
00:00:21,599 --> 00:00:29,039
<font color="#E5E5E5">of implementation</font><font color="#CCCCCC"> a public inheritance</font>

8
00:00:25,380 --> 00:00:33,329
<font color="#E5E5E5">could be either one of them or both of</font>

9
00:00:29,039 --> 00:00:36,239
them<font color="#E5E5E5"> let's look at our example our caste</font>

10
00:00:33,329 --> 00:00:39,590
dog has a<font color="#CCCCCC"> bark function and the</font><font color="#E5E5E5"> buck</font>

11
00:00:36,239 --> 00:00:42,980
function is<font color="#E5E5E5"> a pure virtual function</font><font color="#CCCCCC"> and</font>

12
00:00:39,590 --> 00:00:46,140
the yellow dog<font color="#E5E5E5"> which is derived from dog</font>

13
00:00:42,980 --> 00:00:50,519
overrides the buck function with its<font color="#E5E5E5"> own</font>

14
00:00:46,140 --> 00:00:53,310
implementation<font color="#E5E5E5"> now in this case the</font>

15
00:00:50,520 --> 00:00:57,080
yellow dog inherits the interface of<font color="#E5E5E5"> the</font>

16
00:00:53,310 --> 00:01:00,230
<font color="#CCCCCC">buck function and does not inherit the</font>

17
00:00:57,080 --> 00:01:02,610
implementation of the bark function

18
00:01:00,230 --> 00:01:04,349
because the<font color="#CCCCCC"> bug function doesn't</font><font color="#E5E5E5"> have an</font>

19
00:01:02,610 --> 00:01:10,039
implementation<font color="#E5E5E5"> anyway it's a pure</font>

20
00:01:04,349 --> 00:01:14,548
virtual so this is a interface<font color="#CCCCCC"> only</font>

21
00:01:10,039 --> 00:01:18,570
<font color="#E5E5E5">inheritance now suppose we have another</font>

22
00:01:14,549 --> 00:01:21,749
function it's a regular function<font color="#CCCCCC"> called</font>

23
00:01:18,570 --> 00:01:24,919
<font color="#E5E5E5">one and of</font><font color="#CCCCCC"> course</font><font color="#E5E5E5"> the run</font><font color="#CCCCCC"> function needs</font>

24
00:01:21,749 --> 00:01:24,920
a implementation

25
00:01:28,600 --> 00:01:35,740
as we discussed in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> other video</font><font color="#CCCCCC"> of</font>

26
00:01:33,200 --> 00:01:38,630
maintaining<font color="#CCCCCC"> is a relationship</font><font color="#E5E5E5"> a</font>

27
00:01:35,740 --> 00:01:41,780
non-virtual function<font color="#E5E5E5"> should not be</font>

28
00:01:38,630 --> 00:01:45,199
overridden so the yellow duck<font color="#E5E5E5"> should not</font>

29
00:01:41,780 --> 00:01:48,290
over light<font color="#CCCCCC"> that run function as a result</font>

30
00:01:45,200 --> 00:01:51,050
<font color="#E5E5E5">the yellow</font><font color="#CCCCCC"> duck</font><font color="#E5E5E5"> will inherit the</font>

31
00:01:48,290 --> 00:01:53,480
interface of<font color="#CCCCCC"> the wrong</font><font color="#E5E5E5"> function as well</font>

32
00:01:51,050 --> 00:01:56,840
as<font color="#E5E5E5"> the implementation of the run</font>

33
00:01:53,480 --> 00:02:01,880
<font color="#CCCCCC">function so this</font><font color="#E5E5E5"> is a doer inheritance</font>

34
00:01:56,840 --> 00:02:04,720
of both interface and implementation<font color="#E5E5E5"> now</font>

35
00:02:01,880 --> 00:02:09,679
let's have another virtual function

36
00:02:04,720 --> 00:02:13,900
called<font color="#E5E5E5"> eat</font><font color="#CCCCCC"> and this</font><font color="#E5E5E5"> virtual function has</font>

37
00:02:09,679 --> 00:02:13,900
its own<font color="#E5E5E5"> implementation</font>

38
00:02:18,320 --> 00:02:24,900
now the<font color="#E5E5E5"> yellow dog is given a choice</font>

39
00:02:21,570 --> 00:02:29,640
it can either<font color="#E5E5E5"> override the eat function</font>

40
00:02:24,900 --> 00:02:32,490
or not override it if they choose<font color="#CCCCCC"> not to</font>

41
00:02:29,640 --> 00:02:33,899
override the eat function then it is

42
00:02:32,490 --> 00:02:36,480
<font color="#E5E5E5">just like lon</font>

43
00:02:33,900 --> 00:02:39,240
the yellow dog<font color="#CCCCCC"> will inherit</font><font color="#E5E5E5"> its</font>

44
00:02:36,480 --> 00:02:43,440
interface<font color="#E5E5E5"> as well</font><font color="#CCCCCC"> as its implementation</font>

45
00:02:39,240 --> 00:02:47,120
<font color="#CCCCCC">if the yellow dog choose to</font><font color="#E5E5E5"> override the</font>

46
00:02:43,440 --> 00:02:50,070
eat function then it is<font color="#E5E5E5"> just like</font><font color="#CCCCCC"> bark</font>

47
00:02:47,120 --> 00:02:53,550
<font color="#E5E5E5">the yellow dog will inherit its</font>

48
00:02:50,070 --> 00:02:56,220
<font color="#E5E5E5">interface but not implementation instead</font>

49
00:02:53,550 --> 00:03:00,450
it will provide its own version<font color="#E5E5E5"> of the</font>

50
00:02:56,220 --> 00:03:03,300
implementation<font color="#E5E5E5"> so you can say a non pure</font>

51
00:03:00,450 --> 00:03:06,030
virtual function is providing a

52
00:03:03,300 --> 00:03:11,220
<font color="#CCCCCC">inheritance of the interface as well as</font>

53
00:03:06,030 --> 00:03:15,020
a default implementation<font color="#E5E5E5"> now let's have</font>

54
00:03:11,220 --> 00:03:22,410
another<font color="#E5E5E5"> function</font><font color="#CCCCCC"> it's a protected</font>

55
00:03:15,020 --> 00:03:27,050
function called<font color="#E5E5E5"> the sleep and it has its</font>

56
00:03:22,410 --> 00:03:27,049
own<font color="#CCCCCC"> implementation</font>

57
00:03:32,330 --> 00:03:38,650
since the function is protected<font color="#E5E5E5"> the</font>

58
00:03:35,720 --> 00:03:41,380
<font color="#E5E5E5">yellow</font><font color="#CCCCCC"> dog will inherit the function</font>

59
00:03:38,650 --> 00:03:43,850
<font color="#E5E5E5">however it only inherits the</font>

60
00:03:41,380 --> 00:03:47,600
implementation<font color="#E5E5E5"> of the function</font><font color="#CCCCCC"> and not</font>

61
00:03:43,850 --> 00:03:50,840
the interface of<font color="#E5E5E5"> the function to provide</font>

62
00:03:47,600 --> 00:03:53,780
<font color="#CCCCCC">a service for sleep the</font><font color="#E5E5E5"> yellow dog need</font>

63
00:03:50,840 --> 00:04:01,180
to provide its own version of<font color="#CCCCCC"> the public</font>

64
00:03:53,780 --> 00:04:06,970
function<font color="#E5E5E5"> let's call</font><font color="#CCCCCC"> it void I sleep and</font>

65
00:04:01,180 --> 00:04:06,970
this function<font color="#CCCCCC"> will call sleep</font>

66
00:04:08,740 --> 00:04:16,120
now the<font color="#E5E5E5"> yellow dog has its own interface</font>

67
00:04:11,680 --> 00:04:18,459
for sleep so as you see a protective

68
00:04:16,120 --> 00:04:23,500
function provides<font color="#E5E5E5"> a implementation</font>

69
00:04:18,459 --> 00:04:26,140
inheritance<font color="#CCCCCC"> only to summarize the types</font>

70
00:04:23,500 --> 00:04:29,520
of inheritance<font color="#E5E5E5"> provided by</font><font color="#CCCCCC"> a C++</font>

71
00:04:26,140 --> 00:04:33,430
language there are<font color="#E5E5E5"> four types type</font><font color="#CCCCCC"> 1 a</font>

72
00:04:29,520 --> 00:04:38,620
pure<font color="#E5E5E5"> virtual public function inherits</font>

73
00:04:33,430 --> 00:04:41,170
interface only tab<font color="#E5E5E5"> to a non virtual</font>

74
00:04:38,620 --> 00:04:46,540
public function will<font color="#CCCCCC"> Herot both</font>

75
00:04:41,170 --> 00:04:49,780
interface and implementation type<font color="#E5E5E5"> 3</font><font color="#CCCCCC"> in</font>

76
00:04:46,540 --> 00:04:52,590
<font color="#CCCCCC">pure virtual public</font><font color="#E5E5E5"> function will</font><font color="#CCCCCC"> hear</font>

77
00:04:49,780 --> 00:04:57,309
<font color="#CCCCCC">its interface</font><font color="#E5E5E5"> and a default</font>

78
00:04:52,590 --> 00:05:01,590
<font color="#CCCCCC">implementation</font><font color="#E5E5E5"> type for a protected</font>

79
00:04:57,310 --> 00:05:05,230
function inherits implementation only<font color="#CCCCCC"> as</font>

80
00:05:01,590 --> 00:05:07,900
a software designer who is<font color="#E5E5E5"> designing the</font>

81
00:05:05,230 --> 00:05:10,570
software it is very important to

82
00:05:07,900 --> 00:05:14,260
<font color="#E5E5E5">separate the concepts of interface and</font>

83
00:05:10,570 --> 00:05:16,750
implementation<font color="#E5E5E5"> because he needs to know</font>

84
00:05:14,260 --> 00:05:19,680
when to<font color="#CCCCCC"> use interface inheritance</font><font color="#E5E5E5"> and</font>

85
00:05:16,750 --> 00:05:24,060
when to use implementation inheritance

86
00:05:19,680 --> 00:05:26,500
<font color="#E5E5E5">now the question</font><font color="#CCCCCC"> for us</font><font color="#E5E5E5"> is when</font>

87
00:05:24,060 --> 00:05:29,830
interface inheritance<font color="#E5E5E5"> is the main</font>

88
00:05:26,500 --> 00:05:33,730
<font color="#E5E5E5">feature of inheritance the purpose of it</font>

89
00:05:29,830 --> 00:05:36,580
is number<font color="#CCCCCC"> one</font><font color="#E5E5E5"> subtitle which means one</font>

90
00:05:33,730 --> 00:05:40,960
type can be<font color="#E5E5E5"> safely used in the context</font>

91
00:05:36,580 --> 00:05:44,800
where<font color="#E5E5E5"> another type is expected number</font>

92
00:05:40,960 --> 00:05:46,750
<font color="#CCCCCC">two polymorphism as you see these</font><font color="#E5E5E5"> two a</font>

93
00:05:44,800 --> 00:05:49,450
<font color="#E5E5E5">very important technique in</font>

94
00:05:46,750 --> 00:05:53,500
object-oriented<font color="#CCCCCC"> programming and</font><font color="#E5E5E5"> they are</font>

95
00:05:49,450 --> 00:05:56,260
closely<font color="#CCCCCC"> related so a</font><font color="#E5E5E5"> pure virtual</font>

96
00:05:53,500 --> 00:05:59,200
function which is interface inheritance

97
00:05:56,260 --> 00:06:03,719
<font color="#E5E5E5">only should be widely</font><font color="#CCCCCC"> used</font><font color="#E5E5E5"> when a</font>

98
00:05:59,200 --> 00:06:07,810
subtyping and<font color="#CCCCCC"> polymorphism is needed</font>

99
00:06:03,720 --> 00:06:11,140
pitfalls of interfacing habitants be

100
00:06:07,810 --> 00:06:13,510
careful of interface<font color="#E5E5E5"> bloat since the</font>

101
00:06:11,140 --> 00:06:17,380
interface of a parent class is inherited

102
00:06:13,510 --> 00:06:20,770
<font color="#E5E5E5">by its child class it can</font><font color="#CCCCCC"> easily lead to</font>

103
00:06:17,380 --> 00:06:24,130
interface<font color="#CCCCCC"> plot interface</font><font color="#E5E5E5"> should be</font>

104
00:06:20,770 --> 00:06:27,010
designed to<font color="#CCCCCC"> be minimally enough</font><font color="#E5E5E5"> it</font>

105
00:06:24,130 --> 00:06:32,230
provides enough functionalities but the

106
00:06:27,010 --> 00:06:34,650
size<font color="#E5E5E5"> of it should</font><font color="#CCCCCC"> be minimal another one</font>

107
00:06:32,230 --> 00:06:38,050
is interface should not reveal

108
00:06:34,650 --> 00:06:41,169
implementation details<font color="#E5E5E5"> the whole purpose</font>

109
00:06:38,050 --> 00:06:43,690
of interface design<font color="#E5E5E5"> is to hide the</font>

110
00:06:41,170 --> 00:06:46,180
implementation<font color="#CCCCCC"> details</font><font color="#E5E5E5"> so the</font>

111
00:06:43,690 --> 00:06:48,900
implementation<font color="#CCCCCC"> can change as much as it</font>

112
00:06:46,180 --> 00:06:54,460
like the<font color="#E5E5E5"> interface should stay</font>

113
00:06:48,900 --> 00:06:56,919
<font color="#E5E5E5">relatively fixed if I interface reviews</font>

114
00:06:54,460 --> 00:07:00,750
the implementation<font color="#E5E5E5"> details then we are</font>

115
00:06:56,920 --> 00:07:05,040
<font color="#E5E5E5">losing all the benefits of</font><font color="#CCCCCC"> a projection</font>

116
00:07:00,750 --> 00:07:07,720
what<font color="#CCCCCC"> about implementation inheritance</font>

117
00:07:05,040 --> 00:07:11,050
<font color="#E5E5E5">implementation inheritance</font><font color="#CCCCCC"> is generally</font>

118
00:07:07,720 --> 00:07:14,620
not encouraged although<font color="#CCCCCC"> some time we do</font>

119
00:07:11,050 --> 00:07:16,930
need<font color="#E5E5E5"> them implementation inheritance has</font>

120
00:07:14,620 --> 00:07:21,330
many<font color="#E5E5E5"> problems one for the biggest</font>

121
00:07:16,930 --> 00:07:24,640
problem is it increases code complexity

122
00:07:21,330 --> 00:07:27,210
<font color="#E5E5E5">think about the way we</font><font color="#CCCCCC"> write code</font><font color="#E5E5E5"> we</font>

123
00:07:24,640 --> 00:07:30,430
first load a chunk<font color="#E5E5E5"> of code into</font><font color="#CCCCCC"> our head</font>

124
00:07:27,210 --> 00:07:33,219
understand it<font color="#E5E5E5"> get things right and then</font>

125
00:07:30,430 --> 00:07:35,350
move on<font color="#E5E5E5"> and load another chunk the</font>

126
00:07:33,220 --> 00:07:39,340
problem with implementation<font color="#E5E5E5"> inheritance</font>

127
00:07:35,350 --> 00:07:41,590
<font color="#CCCCCC">is it makes that chunk of code too big</font>

128
00:07:39,340 --> 00:07:44,469
for our head

129
00:07:41,590 --> 00:07:46,690
in order to<font color="#E5E5E5"> get something right in the</font>

130
00:07:44,470 --> 00:07:49,000
derived class<font color="#CCCCCC"> I have to have a good</font>

131
00:07:46,690 --> 00:07:51,880
<font color="#E5E5E5">understanding</font><font color="#CCCCCC"> of all its base classes</font>

132
00:07:49,000 --> 00:07:54,820
and in order<font color="#CCCCCC"> to</font><font color="#E5E5E5"> change something in the</font>

133
00:07:51,880 --> 00:07:57,310
base class<font color="#CCCCCC"> I have to be</font><font color="#E5E5E5"> very careful not</font>

134
00:07:54,820 --> 00:08:02,430
<font color="#CCCCCC">to break</font><font color="#E5E5E5"> anything in all its derived</font>

135
00:07:57,310 --> 00:08:05,740
classes so things<font color="#CCCCCC"> becomes complicated</font>

136
00:08:02,430 --> 00:08:08,280
non<font color="#E5E5E5"> virtual functions and impure virtual</font>

137
00:08:05,740 --> 00:08:10,930
functions<font color="#E5E5E5"> inherits both interface and</font>

138
00:08:08,280 --> 00:08:13,150
<font color="#CCCCCC">implementation however the</font>

139
00:08:10,930 --> 00:08:16,419
implementation inheritance<font color="#CCCCCC"> should be</font>

140
00:08:13,150 --> 00:08:20,080
considered as side benefit of the

141
00:08:16,419 --> 00:08:23,349
interface inheritance<font color="#CCCCCC"> a protected</font>

142
00:08:20,080 --> 00:08:26,859
function will<font color="#CCCCCC"> Hertz</font><font color="#E5E5E5"> implementation</font><font color="#CCCCCC"> only</font>

143
00:08:23,350 --> 00:08:30,850
so it should<font color="#E5E5E5"> not be encouraged in</font>

144
00:08:26,860 --> 00:08:33,190
general if there's some<font color="#E5E5E5"> implementation</font>

145
00:08:30,850 --> 00:08:35,919
needs<font color="#E5E5E5"> to be shared by the base class and</font>

146
00:08:33,190 --> 00:08:38,650
derived class move that implementation

147
00:08:35,919 --> 00:08:41,409
<font color="#E5E5E5">to some helper class and both base class</font>

148
00:08:38,650 --> 00:08:44,620
and derived class shall<font color="#E5E5E5"> have access to</font>

149
00:08:41,409 --> 00:08:49,240
that helper class<font color="#E5E5E5"> it is much more</font>

150
00:08:44,620 --> 00:08:52,750
flexible<font color="#CCCCCC"> that way guidelines</font><font color="#E5E5E5"> for</font>

151
00:08:49,240 --> 00:08:55,839
implementation<font color="#E5E5E5"> inheritance</font><font color="#CCCCCC"> number 1 do</font>

152
00:08:52,750 --> 00:08:59,380
not<font color="#E5E5E5"> use intelligence for code reuse use</font>

153
00:08:55,839 --> 00:09:04,540
<font color="#E5E5E5">composition instead inheritance is not</font>

154
00:08:59,380 --> 00:09:07,270
<font color="#CCCCCC">for code reuse</font><font color="#E5E5E5"> compensation is number to</font>

155
00:09:04,540 --> 00:09:10,810
<font color="#E5E5E5">minimize the implementation in base</font>

156
00:09:07,270 --> 00:09:14,949
classes base classes should be<font color="#CCCCCC"> seen with</font>

157
00:09:10,810 --> 00:09:17,680
implementation<font color="#E5E5E5"> number 3 minimize the</font>

158
00:09:14,950 --> 00:09:20,620
level of hierarchies<font color="#CCCCCC"> in</font><font color="#E5E5E5"> implementation</font>

159
00:09:17,680 --> 00:09:23,760
inheritance<font color="#CCCCCC"> so both number 2 and the</font>

160
00:09:20,620 --> 00:09:26,940
number 3 will reduce the<font color="#E5E5E5"> number of</font>

161
00:09:23,760 --> 00:09:26,939
implementation inheritance

162
00:09:27,200 --> 00:09:32,709
some people claim<font color="#CCCCCC"> that inheritance is</font>

163
00:09:29,810 --> 00:09:36,410
evil<font color="#E5E5E5"> and it should be avoided</font><font color="#CCCCCC"> altogether</font>

164
00:09:32,709 --> 00:09:39,349
<font color="#CCCCCC">I'm not convinced of</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> but I do agree</font>

165
00:09:36,410 --> 00:09:42,800
<font color="#E5E5E5">the second statement inheritance is</font>

166
00:09:39,350 --> 00:09:47,690
often useful<font color="#E5E5E5"> but more often overused</font><font color="#CCCCCC"> or</font>

167
00:09:42,800 --> 00:09:51,019
I should<font color="#E5E5E5"> say abused this is particularly</font>

168
00:09:47,690 --> 00:09:53,540
true<font color="#E5E5E5"> for implementation inheritance when</font>

169
00:09:51,019 --> 00:09:56,480
implementation inheritance is used<font color="#E5E5E5"> too</font>

170
00:09:53,540 --> 00:10:01,219
much it does make inheritance look like

171
00:09:56,480 --> 00:10:04,310
evil but in the end<font color="#E5E5E5"> inheritance is just</font>

172
00:10:01,220 --> 00:10:07,579
a tool<font color="#E5E5E5"> for you</font><font color="#CCCCCC"> to use and like any other</font>

173
00:10:04,310 --> 00:10:12,410
<font color="#E5E5E5">tools when it is used inappropriately</font><font color="#CCCCCC"> it</font>

174
00:10:07,579 --> 00:10:15,199
will hurt you however one cannot call a

175
00:10:12,410 --> 00:10:19,010
knife evil because<font color="#E5E5E5"> it is used in your</font>

176
00:10:15,199 --> 00:10:21,380
<font color="#E5E5E5">proprietary and cut your finger if you</font>

177
00:10:19,010 --> 00:10:24,019
<font color="#CCCCCC">can remember all</font><font color="#E5E5E5"> the pitfalls and</font>

178
00:10:21,380 --> 00:10:28,399
<font color="#CCCCCC">guidelines the inheritance in your code</font>

179
00:10:24,019 --> 00:10:31,160
<font color="#CCCCCC">should not</font><font color="#E5E5E5"> look like evil that's all for</font>

180
00:10:28,399 --> 00:10:34,149
today's topic<font color="#CCCCCC"> the duality of public</font>

181
00:10:31,160 --> 00:10:37,750
inheritance interface and implementation

182
00:10:34,149 --> 00:10:37,750
<font color="#CCCCCC">see you</font><font color="#E5E5E5"> next time</font>

